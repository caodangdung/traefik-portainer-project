services:
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    expose:
      - 9090
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.retention.size=256MB"
    labels:
      - "traefik.enable=true" # <== Enable traefik on itself to view dashboard and assign subdomain to view it
      - "traefik.http.routers.prometheus.entrypoints=web,websecure"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.local`)" # <== Setting the domain for the dashboard
      - "traefik.http.routers.prometheus.service=prometheus-service"
      - "traefik.http.services.prometheus-service.loadbalancer.server.port=9090"
      - "traefik.http.routers.prometheus.tls=true"
    restart: unless-stopped
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  grafana:
    image: grafana/grafana
    container_name: grafana
    depends_on:
      - prometheus
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    environment:
      GF_SECURITY_DISABLE_INITIAL_ADMIN_CREATION: "false"
      GF_INSTALL_PLUGINS: grafana-piechart-panel
    labels:
      - "traefik.enable=true" # <== Enable traefik on itself to view dashboard and assign subdomain to view it
      - "traefik.http.routers.grafana.entrypoints=web,websecure"
      - "traefik.http.routers.grafana.rule=Host(`grafana.local`)" # <== Setting the domain for the dashboard
      - "traefik.http.routers.grafana.service=grafana-service"
      - "traefik.http.services.grafana-service.loadbalancer.server.port=3000"
      - "traefik.http.routers.grafana.tls=true"
    restart: unless-stopped
    logging:
      options:
        max-size: "10m"
        max-file: "3"  

volumes:
  prometheus_data:
  grafana_data:

networks:
  default:
    external:
      name: traefik_default
